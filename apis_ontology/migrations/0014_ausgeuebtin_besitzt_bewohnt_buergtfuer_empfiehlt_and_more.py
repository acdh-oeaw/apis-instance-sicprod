# Generated by Django 5.1.5 on 2025-01-22 10:15

import apis_core.generic.abc
import django.db.models.deletion
import django_interval.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apis_ontology', '0013_alter_place_label_alter_versionplace_label'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('relations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AusgeuebtIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='Besitzt',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='Bewohnt',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='BuergtFuer',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='Empfiehlt',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='FindetStattIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='FuehrtDurch',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='GehoertZu',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='GingHervorAus',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HaeltSichAufIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatEheMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatFamilienbeziehungZu',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatGeschaeftsbeziehungZu',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatHeimatortIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatKorrespondenzMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='HatStreitMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='InstitutionFuehrtDurch',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='InstitutionWeistAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstBruderSchwesterVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstGeborenIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstGelegenIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstGestorbenIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstImDienstVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstKindVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstMitgliedVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstMoeglicherweiseIdentischMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstMoeglicherweiseSpezifiziertAls',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstPfruendnerVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstTaetigAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstTaetigIn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstTeilVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstUntergeordnet',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstVerbundenMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstVerpfaendetAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='IstVormundVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='NimmtEntgegen',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='NimmtTeilAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='PersonWeistAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='StehtInVerbindungMit',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='VerkauftBesitzAn',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='WirdAngewiesenVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='WirdAusbezahltAnFunction',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='WirdAusbezahltAnPerson',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='WirdAusgeuebtVon',
            fields=[
                ('relation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='relations.relation')),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('relations.relation', models.Model),
        ),
        migrations.CreateModel(
            name='VersionAusgeuebtIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ausgeuebt in',
                'verbose_name_plural': 'historical ausgeuebt ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionBesitzt',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical besitzt',
                'verbose_name_plural': 'historical besitzts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionBewohnt',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical bewohnt',
                'verbose_name_plural': 'historical bewohnts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionBuergtFuer',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical buergt fuer',
                'verbose_name_plural': 'historical buergt fuers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionEmpfiehlt',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical empfiehlt',
                'verbose_name_plural': 'historical empfiehlts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionFindetStattIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical findet statt in',
                'verbose_name_plural': 'historical findet statt ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionFuehrtDurch',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical fuehrt durch',
                'verbose_name_plural': 'historical fuehrt durchs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionGehoertZu',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical gehoert zu',
                'verbose_name_plural': 'historical gehoert zus',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionGingHervorAus',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ging hervor aus',
                'verbose_name_plural': 'historical ging hervor auss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHaeltSichAufIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical haelt sich auf in',
                'verbose_name_plural': 'historical haelt sich auf ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatEheMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat ehe mit',
                'verbose_name_plural': 'historical hat ehe mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatFamilienbeziehungZu',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat familienbeziehung zu',
                'verbose_name_plural': 'historical hat familienbeziehung zus',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatGeschaeftsbeziehungZu',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat geschaeftsbeziehung zu',
                'verbose_name_plural': 'historical hat geschaeftsbeziehung zus',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatHeimatortIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat heimatort in',
                'verbose_name_plural': 'historical hat heimatort ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatKorrespondenzMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat korrespondenz mit',
                'verbose_name_plural': 'historical hat korrespondenz mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionHatStreitMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical hat streit mit',
                'verbose_name_plural': 'historical hat streit mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionInstitutionFuehrtDurch',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical institution fuehrt durch',
                'verbose_name_plural': 'historical institution fuehrt durchs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionInstitutionWeistAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical institution weist an',
                'verbose_name_plural': 'historical institution weist ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist an',
                'verbose_name_plural': 'historical ist ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstBruderSchwesterVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist bruder schwester von',
                'verbose_name_plural': 'historical ist bruder schwester vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstGeborenIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist geboren in',
                'verbose_name_plural': 'historical ist geboren ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstGelegenIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist gelegen in',
                'verbose_name_plural': 'historical ist gelegen ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstGestorbenIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist gestorben in',
                'verbose_name_plural': 'historical ist gestorben ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstImDienstVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist im dienst von',
                'verbose_name_plural': 'historical ist im dienst vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstKindVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist kind von',
                'verbose_name_plural': 'historical ist kind vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstMitgliedVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist mitglied von',
                'verbose_name_plural': 'historical ist mitglied vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstMoeglicherweiseIdentischMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist moeglicherweise identisch mit',
                'verbose_name_plural': 'historical ist moeglicherweise identisch mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstMoeglicherweiseSpezifiziertAls',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist moeglicherweise spezifiziert als',
                'verbose_name_plural': 'historical ist moeglicherweise spezifiziert alss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstPfruendnerVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist pfruendner von',
                'verbose_name_plural': 'historical ist pfruendner vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstTaetigAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist taetig an',
                'verbose_name_plural': 'historical ist taetig ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstTaetigIn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist taetig in',
                'verbose_name_plural': 'historical ist taetig ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstTeilVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist teil von',
                'verbose_name_plural': 'historical ist teil vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstUntergeordnet',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist untergeordnet',
                'verbose_name_plural': 'historical ist untergeordnets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstVerbundenMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist verbunden mit',
                'verbose_name_plural': 'historical ist verbunden mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstVerpfaendetAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist verpfaendet an',
                'verbose_name_plural': 'historical ist verpfaendet ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionIstVormundVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical ist vormund von',
                'verbose_name_plural': 'historical ist vormund vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionNimmtEntgegen',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical nimmt entgegen',
                'verbose_name_plural': 'historical nimmt entgegens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionNimmtTeilAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical nimmt teil an',
                'verbose_name_plural': 'historical nimmt teil ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionPersonWeistAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical person weist an',
                'verbose_name_plural': 'historical person weist ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionStehtInVerbindungMit',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical steht in verbindung mit',
                'verbose_name_plural': 'historical steht in verbindung mits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionVerkauftBesitzAn',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical verkauft besitz an',
                'verbose_name_plural': 'historical verkauft besitz ans',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionWirdAngewiesenVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical wird angewiesen von',
                'verbose_name_plural': 'historical wird angewiesen vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionWirdAusbezahltAnFunction',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical wird ausbezahlt an function',
                'verbose_name_plural': 'historical wird ausbezahlt an functions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionWirdAusbezahltAnPerson',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical wird ausbezahlt an person',
                'verbose_name_plural': 'historical wird ausbezahlt an persons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
        migrations.CreateModel(
            name='VersionWirdAusgeuebtVon',
            fields=[
                ('relation_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='relations.relation')),
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('version_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('subj_object_id', models.PositiveIntegerField()),
                ('obj_object_id', models.PositiveIntegerField()),
                ('legacy_relation_id', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('end', django_interval.fields.FuzzyDateParserField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_sort', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_from', models.DateField(blank=True, editable=False, null=True)),
                ('end_date_to', models.DateField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('obj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('subj_content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'historical wird ausgeuebt von',
                'verbose_name_plural': 'historical wird ausgeuebt vons',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model, apis_core.generic.abc.GenericModel),
        ),
    ]

# Generated by Django 4.2.7 on 2023-11-22 12:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apis_metainfo', '0008_alter_rootobject_self_contenttype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('alternative_label', models.TextField(blank=True, help_text='Alternativer Name.', null=True, verbose_name='Alternativer Name')),
                ('type', models.CharField(blank=True, choices=[('Hochzeit', 'Hochzeit'), ('Landtag', 'Landtag'), ('Fest/Turnier', 'Fest/Turnier'), ('Schlacht', 'Schlacht'), ('Gesandtschaft/Reise', 'Gesandtschaft/Reise'), ('Taufe', 'Taufe'), ('Amtseinsetzung', 'Amtseinsetzung'), ('Reichstag', 'Reichstag')], help_text='Typ des Ereignisses.', max_length=19, verbose_name='Typ')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('alternative_label', models.TextField(blank=True, help_text='Andere Namen für die Funktion.', null=True, verbose_name='Alternativer Name')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('alternative_label', models.TextField(blank=True, help_text='Alternativer Name der Institution.', null=True, verbose_name='Alternativer Name')),
                ('type', models.CharField(blank=True, choices=[('Kanzlei', 'Kanzlei'), ('Hofkapelle', 'Hofkapelle'), ('Küche', 'Küche'), ('(Dom-)Kapitel', '(Dom-)Kapitel'), ('Universität', 'Universität'), ('Kloster', 'Kloster'), ('Frauenzimmer', 'Frauenzimmer'), ('Bistum', 'Bistum'), ('Pfarrei', 'Pfarrei')], help_text='Art der institution.', max_length=13, verbose_name='Typ')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, help_text='Vorname der Person.', max_length=1024, null=True, verbose_name='Vorname')),
                ('gender', models.CharField(blank=True, choices=[('männlich', 'männlich'), ('weiblich', 'weiblich'), ('unbekannt', 'unbekannt')], help_text='Geschlecht der Person.', max_length=9, verbose_name='Geschlecht')),
                ('alternative_label', models.TextField(blank=True, help_text='Feld um alternative Namen anzugeben.', null=True, verbose_name='Alternativer Name')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('alternative_label', models.TextField(blank=True, help_text='Alternativer Name für einen Ort.', null=True, verbose_name='Alternativer Name')),
                ('type', models.CharField(blank=True, choices=[('Stadt', 'Stadt'), ('Dorf/Nachbarschaft/Gemein/Siedlung/Weiler', 'Dorf/Nachbarschaft/Gemein/Siedlung/Weiler'), ('Burg/Schloss', 'Burg/Schloss'), ('Land/Herrschaftskomplex', 'Land/Herrschaftskomplex'), ('Landschaft/Region', 'Landschaft/Region'), ('Lehen', 'Lehen'), ('Haus/Hof', 'Haus/Hof'), ('Gericht', 'Gericht'), ('Kloster', 'Kloster'), ('Gewässer', 'Gewässer'), ('Grundherrschaft', 'Grundherrschaft'), ('Hofmark', 'Hofmark'), ('Tal', 'Tal'), ('Berg', 'Berg'), ('Bergrevier', 'Bergrevier'), ('Pflege', 'Pflege'), ('(Land-)Vogtei', '(Land-)Vogtei'), ('Propstei', 'Propstei')], help_text='Art des Ortes.', max_length=41, verbose_name='Typ')),
                ('latitude', models.FloatField(blank=True, help_text='Breitengrad des Ortes. Bei Polygonen wird die Mitte verwendet.', null=True, verbose_name='Breitengrad')),
                ('longitude', models.FloatField(blank=True, help_text='Längengrad des Ortes. Bei Polygonen wird die Mitte verwendet.', null=True, verbose_name='Längengrad')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('rootobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='apis_metainfo.rootobject')),
                ('start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_start_date', models.DateField(blank=True, editable=False, null=True)),
                ('end_end_date', models.DateField(blank=True, editable=False, null=True)),
                ('start_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='Start')),
                ('end_date_written', models.CharField(blank=True, max_length=255, null=True, verbose_name='End')),
                ('review', models.BooleanField(default=False, help_text='Should be set to True, if the data record holds up quality standards.')),
                ('status', models.CharField(blank=True, max_length=100)),
                ('references', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('typ', models.CharField(blank=True, choices=[('Sold', 'Sold'), ('Zehrung', 'Zehrung'), ('Provision', 'Provision'), ('Kredit', 'Kredit'), ('Sonstiges', 'Sonstiges'), ('Burghut', 'Burghut'), ('Botenlohn', 'Botenlohn')], help_text='Art des Gehalts.', max_length=9, verbose_name='Typ')),
                ('repetitionType', models.CharField(blank=True, choices=[('einfach', 'einfach'), ('wiederholend', 'wiederholend')], help_text='Typ des Gehalts.', max_length=12, verbose_name='Typ Wiederholungen')),
            ],
            options={
                'abstract': False,
            },
            bases=('apis_metainfo.rootobject', models.Model),
        ),
    ]
